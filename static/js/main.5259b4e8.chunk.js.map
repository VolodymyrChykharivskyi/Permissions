{"version":3,"sources":["components/TableItem/TableItem.module.css","components/PermissionSection/PermissionSection.module.css","components/App/App.module.css","components/Table/Table.module.css","components/Title/Title.module.css","components/Button/Button.module.css","serviceWorker.js","redux/permissionsReducer.js","redux/store.js","components/Checkbox/Checkbox.js","components/TableItem/TableItem.js","components/Table/Table.js","components/Title/Title.js","components/Button/Button.js","components/PermissionSection/PermissionSection.js","components/App/App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initState","permissions","id","view","edit","remove","syncRelatedActions","item","action","changeForAllPermissions","tempState","actionValue","filter","every","el","map","permissionsReducer","state","type","temp","permission","idx","findIndex","element","reducers","combineReducers","store","createStore","connect","changePermission","chooseAllPermission","checked","description","sectionName","disabled","htmlFor","onChange","TableItem","props","className","styles","toUpperCase","slice","actionsAll","actions","Table","key","Title","title","Button","onClick","permissionsData","PermissionSection","section","localStorage","setItem","JSON","stringify","App","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2HACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,QAAU,2BAA2B,WAAa,gC,mBCA7GD,EAAOC,QAAU,CAAC,kBAAoB,6CAA6C,OAAS,oC,kBCA5FD,EAAOC,QAAU,CAAC,IAAM,mB,gBCAxBD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,yB,qICWPC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gCCfAC,EAAY,CAChBC,YAAa,CACX,CAACC,GAAI,WAAYC,MAAM,EAAOC,MAAM,EAAOC,QAAQ,GACnD,CAACH,GAAI,WAAYC,MAAM,EAAOC,MAAM,EAAOC,QAAQ,GACnD,CAACH,GAAI,UAAWC,MAAM,EAAOC,MAAM,EAAOC,QAAQ,GAClD,CAACH,GAAI,WAAYC,MAAM,EAAOC,MAAM,EAAOC,QAAQ,GACnD,CAACH,GAAI,WAAYC,MAAM,EAAOC,MAAM,EAAOC,QAAQ,KAIjDC,EAAqB,SAACC,EAAMC,GAOhC,MANe,SAAXA,GACFD,EAAKH,MAAO,EACZG,EAAKF,QAAS,GACM,SAAXG,IACTD,EAAKF,QAAS,GAET,eACFE,IAIDE,EAA0B,SAACC,EAAWF,GAC1C,IAAIG,IAAcD,EAAUT,YACzBW,QAAO,SAAAL,GAAI,MAAgB,aAAZA,EAAKL,MACpBW,OAAM,SAAAC,GAAE,OAAIA,EAAGN,MAElB,OAAO,2BACFE,GADL,IAEET,YAAaS,EAAUT,YAAYc,KAAI,SAAAR,GACrC,MAAgB,aAAZA,EAAKL,IAGFS,IACHJ,EAAOD,EAAmBC,EAAMC,IAG3B,2BACFD,GADL,kBAEGC,EAASG,KAGPJ,QAwEES,EAnEY,WAAgC,IAA/BC,EAA8B,uDAAtBjB,EAAWQ,EAAW,uCACxD,OAAQA,EAAOU,MACb,IApDsB,oBAqDpB,IAAIC,EAAI,2BACHF,GADG,IAENhB,YAAagB,EAAMhB,YAAYc,KAAI,SAAAR,GACjC,GAAIA,EAAKL,KAAOM,EAAOY,WAAY,CACjC,IAAIT,GAAeJ,EAAKC,EAAOA,QAO/B,OAJKG,IACHJ,EAAOD,EAAmBC,EAAMC,EAAOA,SAGlC,2BACFD,GADL,kBAEGC,EAAOA,OAASG,IAGrB,OAAOJ,OAKX,OAFAY,EAAOV,EAAwBU,EAAMX,EAAOA,QAErC,eACFW,GAEP,IA5E2B,yBA6EzB,IAAIE,EAAMJ,EAAMhB,YAAYqB,WAAU,SAAAC,GAAO,OAAIA,EAAQrB,KAAOM,EAAOY,cACnET,GAAeM,EAAMhB,YAAYoB,GAAKb,EAAOA,QAEjD,OAAO,2BACFS,GADL,IAEEhB,YAAagB,EAAMhB,YAAYc,KAAI,SAAAR,GAOjC,OAJKI,IACHJ,EAAOD,EAAmBC,EAAMC,EAAOA,SAGlC,2BACFD,GADL,kBAEGC,EAAOA,OAASG,SAIzB,QACE,OAAOM,IC9FPO,EAAWC,YAAgB,CAC/BxB,YAAae,IAGTU,EAAQC,YACZH,GAGF5B,OAAO8B,MAAQA,EAEAA,Q,0DCaAE,cAAQ,KAAM,CAACC,iBF2EE,SAACT,EAAYZ,GAC3C,MAAO,CACLU,KAvGsB,oBAwGtBE,aACAZ,WE/E4CsB,oBFmFb,SAACV,EAAYZ,GAC9C,MAAO,CACLU,KA9G2B,yBA+G3BE,aACAZ,YEvFWoB,EArBb,SAAC,GAA0G,IAAzGG,EAAwG,EAAxGA,QAASC,EAA+F,EAA/FA,YAAaC,EAAkF,EAAlFA,YAAaJ,EAAqE,EAArEA,iBAAkBC,EAAmD,EAAnDA,oBAAmD,IAA9BI,gBAA8B,SAAZ1B,EAAY,EAAZA,OACxFN,EAAK+B,EAAcD,EAAcxB,EAUvC,OACE,8BACE,2BAAO2B,QAASjC,GACd,2BAAOA,GAAIA,EAAIgB,KAAK,WAAWa,QAASA,EAASK,SAX/B,WACF,aAAhBH,EAIJJ,EAAiBI,EAAazB,GAH5BsB,EAAoBG,EAAazB,IAS6C0B,SAAUA,IACtF,8BAAOF,QC6CAK,EA7DG,SAACC,GAAW,IAAD,EACiBA,EAAMrB,MAA7Cd,EADsB,EACtBA,KAAMC,EADgB,EAChBA,KAAMC,EADU,EACVA,OAAY4B,EADF,EACF/B,GAEzB,OACE,yBAAKqC,UAAWC,IAAOH,WACrB,6BACGJ,EAAY,GAAGQ,cAAgBR,EAAYS,MAAM,IAEpD,6BAEoB,aAAhBT,EACE,yBAAKM,UAAWC,IAAOG,YACrB,kBAAC,EAAD,CACEZ,QAAS5B,EACT6B,YAAY,YACZC,YAAaA,EACbzB,OAAO,SAET,kBAAC,EAAD,CACEuB,QAAS3B,EACT4B,YAAY,YACZC,YAAaA,EACbzB,OAAO,OACP0B,UAAW/B,IAEb,kBAAC,EAAD,CACE4B,QAAS1B,EACT2B,YAAY,YACZC,YAAaA,EACbzB,OAAO,SACP0B,UAAW9B,KAGb,yBAAKmC,UAAWC,IAAOI,SACvB,kBAAC,EAAD,CACEb,QAAS5B,EACT6B,YAAY,OACZC,YAAaA,EACbzB,OAAO,SAET,kBAAC,EAAD,CACEuB,QAAS3B,EACT4B,YAAY,OACZC,YAAaA,EACbzB,OAAO,OACP0B,UAAW/B,IAEb,kBAAC,EAAD,CACE4B,QAAS1B,EACT2B,YAAY,SACZC,YAAaA,EACbzB,OAAO,SACP0B,UAAW9B,QC3BZwB,eANS,SAACX,GACvB,MAAO,CACLhB,YAAagB,EAAMhB,YAAYA,eAIpB2B,EAxBD,SAAC,GAAmB,IAAlB3B,EAAiB,EAAjBA,YACd,OACE,yBAAKsC,UAAWC,IAAOK,OAEnB5C,EAAYc,KAAI,SAAAR,GACZ,OACE,kBAAC,EAAD,CACEuC,IAAKvC,EAAKL,GACVe,MAAOV,W,iBCJRwC,EAND,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACd,OACE,wBAAIT,UAAWC,IAAOO,OAAQC,I,iBCInBC,EANA,SAAC,GAAc,IAAbzC,EAAY,EAAZA,OACf,OACE,4BAAQ0C,QAAS1C,EAAQ+B,UAAWC,IAAOS,QAA3C,S,iBCmCWrB,eANS,SAACX,GACvB,MAAO,CACLkC,gBAAiBlC,EAAMhB,YAAYA,eAIxB2B,EAjCW,SAAC,GAAuB,IAAtBuB,EAAqB,EAArBA,gBAgB1B,OACE,yBAAKZ,UAAWC,IAAOY,mBACrB,kBAAC,EAAD,CAAOJ,MAAM,eACb,kBAAC,EAAD,MACA,yBAAKT,UAAWC,IAAOS,QACrB,kBAAC,EAAD,CAAQzC,OAnBU,WACtB,IAAMP,EAAckD,EAAgBpC,KAAI,SAAAR,GACtC,MAAO,CACL8C,QAAS9C,EAAKL,GACdkB,WAAY,CACVjB,KAAMI,EAAKJ,KACXC,KAAMG,EAAKH,KACXC,OAAQE,EAAKF,YAInBiD,aAAaC,QAAQ,cAAeC,KAAKC,UAAUxD,YCRxCyD,EARH,WACV,OACE,yBAAKnB,UAAWC,IAAOkB,KACrB,kBAAC,EAAD,QCCNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUnC,MAAOA,GACf,kBAAC,EAAD,QAGJoC,SAASC,eAAe,SVqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5259b4e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TableItem\":\"TableItem_TableItem__1cVtT\",\"actions\":\"TableItem_actions__3Rk9J\",\"actionsAll\":\"TableItem_actionsAll__1eqJB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PermissionSection\":\"PermissionSection_PermissionSection__okDnS\",\"Button\":\"PermissionSection_Button__ZepZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__aOmNj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"Table_Table__1gUAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title_Title__3cQPx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"PermissionSection is cached for offline use.\" message.\n              console.log('PermissionSection is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const CHANGE_PERMISSION = \"CHANGE-PERMISSION\";\nconst CHOOSE_ALL_PERMISSIONS = \"CHOOSE-ALL-PERMISSIONS\";\n\nconst initState = {\n  permissions: [\n    {id: 'sections', view: false, edit: false, remove: false},\n    {id: 'calendar', view: false, edit: false, remove: false},\n    {id: 'profile', view: false, edit: false, remove: false},\n    {id: 'property', view: false, edit: false, remove: false},\n    {id: 'contacts', view: false, edit: false, remove: false},\n  ],\n};\n\nconst syncRelatedActions = (item, action) => {\n  if (action === 'view') {\n    item.edit = false;\n    item.remove = false;\n  } else if (action === 'edit') {\n    item.remove = false;\n  }\n  return {\n    ...item\n  }\n}\n\nconst changeForAllPermissions = (tempState, action) => {\n  let actionValue = tempState.permissions\n    .filter(item => item.id !== \"sections\")\n    .every(el => el[action]) ? true : false;\n\n  return {\n    ...tempState,\n    permissions: tempState.permissions.map(item => {\n      if (item.id === \"sections\") {\n\n        // When disable permission\n        if (!actionValue) {\n          item = syncRelatedActions(item, action);\n        }\n\n        return {\n          ...item,\n          [action]: actionValue\n        }\n      }\n      return item;\n    })\n  };\n}\n\nconst permissionsReducer = (state = initState, action) => {\n  switch (action.type) {\n    case CHANGE_PERMISSION:\n      let temp = {\n        ...state,\n        permissions: state.permissions.map(item => {\n          if (item.id === action.permission) {\n            let actionValue = !item[action.action];\n\n            // When disable permission\n            if (!actionValue) {\n              item = syncRelatedActions(item, action.action);\n            }\n\n            return {\n              ...item,\n              [action.action]: actionValue\n            }\n          }\n          return item;\n        }),\n      }\n      temp = changeForAllPermissions(temp, action.action);\n\n      return {\n        ...temp\n      };\n    case CHOOSE_ALL_PERMISSIONS:\n      let idx = state.permissions.findIndex(element => element.id === action.permission)\n      let actionValue = (state.permissions[idx][action.action]) ? false : true;\n\n      return {\n        ...state,\n        permissions: state.permissions.map(item => {\n\n          // When disable permission\n          if (!actionValue) {\n            item = syncRelatedActions(item, action.action);\n          }\n\n          return {\n            ...item,\n            [action.action]: actionValue\n          }\n        })\n      }\n    default:\n      return state;\n  }\n}\n\nexport const changePermission = (permission, action) => {\n  return {\n    type: CHANGE_PERMISSION,\n    permission,\n    action\n  }\n}\n\nexport const chooseAllPermission = (permission, action) => {\n  return {\n    type: CHOOSE_ALL_PERMISSIONS,\n    permission,\n    action\n  }\n}\n\nexport default permissionsReducer;\n","import {combineReducers, createStore} from \"redux\";\nimport permissionsReducer from \"./permissionsReducer\";\n\nconst reducers = combineReducers({\n  permissions: permissionsReducer\n});\n\nconst store = createStore(\n  reducers\n);\n\nwindow.store = store;\n\nexport default store;\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {changePermission, chooseAllPermission} from \"../../redux/permissionsReducer\";\n\nconst Checkbox =\n  ({checked, description, sectionName, changePermission, chooseAllPermission, disabled = false, action}) => {\n  const id = sectionName + description + action;\n\n  const onChangeHandler = () => {\n    if (sectionName === 'sections') {\n      chooseAllPermission(sectionName, action)\n      return;\n    }\n    changePermission(sectionName, action);\n  }\n\n  return (\n    <span>\n      <label htmlFor={id}>\n        <input id={id} type=\"checkbox\" checked={checked} onChange={onChangeHandler} disabled={disabled}/>\n        <span>{description}</span>\n      </label>\n    </span>\n  );\n}\n\nexport default connect(null, {changePermission, chooseAllPermission})(Checkbox);\n","import React from \"react\";\nimport styles from './TableItem.module.css';\nimport Checkbox from \"../Checkbox/Checkbox\";\n\nconst TableItem = (props) => {\n  let {view, edit, remove, id: sectionName} = props.state;\n\n  return (\n    <div className={styles.TableItem}>\n      <div>\n        {sectionName[0].toUpperCase() + sectionName.slice(1)}\n      </div>\n      <div>\n        {\n          sectionName === 'sections' ?\n            <div className={styles.actionsAll}>\n              <Checkbox\n                checked={view}\n                description='Check all'\n                sectionName={sectionName}\n                action='view'\n              />\n              <Checkbox\n                checked={edit}\n                description='Check all'\n                sectionName={sectionName}\n                action='edit'\n                disabled={!view}\n              />\n              <Checkbox\n                checked={remove}\n                description='Check all'\n                sectionName={sectionName}\n                action='remove'\n                disabled={!edit}\n              />\n            </div>\n            : <div className={styles.actions}>\n              <Checkbox\n                checked={view}\n                description='View'\n                sectionName={sectionName}\n                action='view'\n              />\n              <Checkbox\n                checked={edit}\n                description='Edit'\n                sectionName={sectionName}\n                action='edit'\n                disabled={!view}\n              />\n              <Checkbox\n                checked={remove}\n                description='Remove'\n                sectionName={sectionName}\n                action='remove'\n                disabled={!edit}\n              />\n            </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default TableItem;\n","import React from \"react\";\nimport styles from \"./Table.module.css\";\nimport TableItem from \"../TableItem/TableItem\";\nimport {connect} from \"react-redux\";\n\nconst Table = ({permissions}) => {\n  return (\n    <div className={styles.Table}>\n      {\n        permissions.map(item => {\n            return (\n              <TableItem\n                key={item.id}\n                state={item}\n              />\n            );\n          }\n        )\n      }\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    permissions: state.permissions.permissions\n  }\n}\n\nexport default connect(mapStateToProps)(Table);\n","import React from \"react\";\nimport styles from './Title.module.css';\n\nconst Title = ({title}) => {\n  return (\n    <h1 className={styles.Title}>{title}</h1>\n  );\n}\n\nexport default Title;\n","import React from 'react';\nimport styles from './Button.module.css';\n\nconst Button = ({action}) => {\n  return (\n    <button onClick={action} className={styles.Button}>Save</button>\n  );\n}\n\nexport default Button;\n","import React from \"react\";\nimport Table from \"../Table/Table\";\nimport {connect} from \"react-redux\";\nimport Title from \"../Title/Title\";\nimport Button from \"../Button/Button\";\nimport styles from \"./PermissionSection.module.css\";\n\nconst PermissionSection = ({permissionsData}) => {\n\n  const setLocalStorage = () => {\n    const permissions = permissionsData.map(item => {\n      return {\n        section: item.id,\n        permission: {\n          view: item.view,\n          edit: item.edit,\n          remove: item.remove\n        }\n      }\n    })\n    localStorage.setItem(\"permissions\", JSON.stringify(permissions));\n  }\n\n  return (\n    <div className={styles.PermissionSection}>\n      <Title title='Permission'/>\n      <Table/>\n      <div className={styles.Button}>\n        <Button action={setLocalStorage}/>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    permissionsData: state.permissions.permissions\n  }\n}\n\nexport default connect(mapStateToProps)(PermissionSection);\n","import React from \"react\";\nimport styles from \"./App.module.css\";\nimport PermissionSection from \"../PermissionSection/PermissionSection\";\n\nconst App = () => {\n  return (\n    <div className={styles.App}>\n      <PermissionSection/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport './index.css';\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}